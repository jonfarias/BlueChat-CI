#Service DB
apiVersion: v1
kind: Service
metadata:
  name: bluechat-db-prod
  namespace: bluechat-prod
spec:
  type: ClusterIP
  selector:
    app: bluechat-db-prod
  ports:
    - name: db-port-prod
      protocol: TCP
      port: 3306
      targetPort: 3306

---

#Deploy DB
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bluechat-db-deploy-prod
  namespace: bluechat-prod
spec:
  replicas: 1
  template:
    metadata:
        name: bluechat-db-prod
        labels:
          app: bluechat-db-prod
    spec:
      containers:
      - name: bluechat-db
        image: jonfarias/bluechat-db:1
        resources:
          request:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "250m"
        #volumeMounts:
        #  - mountPath: "/var/lib/mysql"
        #    name: db-disk
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
              secretKeyRef:
                name: bluechat-secret-prod
                key: mysql-root-password
        - name: MYSQL_DATABASE
          valueFrom:
              secretKeyRef:
                name: bluechat-secret-prod
                key: mysql-database
        - name: MYSQL_USER
          valueFrom:
              secretKeyRef:
                name: bluechat-secret-prod
                key: mysql-user
        - name: MYSQL_PASSWORD
          valueFrom:
              secretKeyRef:
                name: bluechat-secret-prod
                key: mysql-password
      #volumes:
       # - name: db-disk
        #  persistentVolumeClaim:
        #    claimName: db-k8s-pvc
  selector:
    matchLabels:
      app: bluechat-db-prod

---

#Service Bluechat
apiVersion: v1
kind: Service
metadata:
  name: bluechat-prod
  namespace: bluechat-prod
spec:
  type: ClusterIP
  selector:
    app: bluechat-prod
  ports:
  - name: http
    port: 80
    targetPort: 5000

---
#Deploy Bluechat
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bluechat-deploy-prod
  namespace: bluechat-prod
spec:
  replicas: 1
  template:
    metadata:
        name: bluechat-prod
        labels:
          app: bluechat-prod
    spec:
      initContainers:
        - name: check-mysql
          image: busybox:latest
          command: ['sh', '-c', 'until nslookup bluechat-db-prod.bluechat-prod.svc.cluster.local; do echo waiting for mysql; sleep 2; done;'] 
      containers:
      - name: bluechat-container
        image: jonfarias/bluechat-web:$TAG
        resources:
          request:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "300m"
        ports:
        - containerPort: 5000
        env:
        - name: MYSQL_DATABASE
          valueFrom:
              secretKeyRef:
                name: bluechat-secret-prod
                key: mysql-database
        - name: MYSQL_USER
          valueFrom:
              secretKeyRef:
                name: bluechat-secret-prod
                key: mysql-user
        - name: MYSQL_PASSWORD
          valueFrom:
              secretKeyRef:
                name: bluechat-secret-prod
                key: mysql-password
        - name: MYSQL_HOST
          valueFrom:
              secretKeyRef:
                name: bluechat-secret-prod
                key: mysql-host
        - name: MYSQL_PORT
          valueFrom:
              secretKeyRef:
                name: bluechat-secret-prod
                key: mysql-port
        - name: SECRET_KEY
          valueFrom:
              secretKeyRef:
                name: bluechat-secret-prod
                key: secret-key  
        - name: FLASK_ENV
          valueFrom:
              secretKeyRef:
                name: bluechat-secret-prod
                key: flask-env    
  selector:
    matchLabels:
      app: bluechat-prod