version: 2.1
orbs:
  python: circleci/python@1.2
jobs:
  Test: 
    docker:
      - image: cimg/python:3.8
        environment:
          FLASK_CONFIG: testing
    steps:
      - checkout
      - run:
          name: Setup VirtualEnv
          command: |
            virtualenv bluechat
            . bluechat/bin/activate
            pip install --no-cache-dir -r app/requirements.txt
      #- run:
      #    name: Run Tests
      #    command: |
      #      . helloworld/bin/activate
      #      python test_hello_world.py
  Build and Publish:
    docker:
      - image: cimg/python:3.8
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASSWD
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
          docker_layer_caching: true
      - run: |
          TAG=0.$CIRCLE_BUILD_NUM
          docker build -t $DOCKER_USER/bluechat:$TAG app/.
          echo $DOCKER_PASSWD | docker login -u $DOCKER_USER --password-stdin
          docker push $DOCKER_USER/bluechat:$TAG
          docker tag $DOCKER_USER/bluechat:$TAG $DOCKER_USER/bluechat:latest
          docker push $DOCKER_USER/bluechat:latest
  GenerateYAML:
    docker:
      - image: cimg/base:stable
    steps:
      #- attach_workspace:
      #    at: /tmp/workspace
      - run : |
          TAG=0.$CIRCLE_PREVIOUS_BUILD_NUM
          git clone https://github.com/jonfarias/BlueChat-CD /tmp/BlueChat-CD
          pwd
          ls
          cp chat-deploy.yaml /tmp/BlueChat-CD
          cd /tmp/BlueChat-CD
          sed -i 's/\(bluechat\)\(.*\)/\1:'$TAG'/' ./chat-deploy.yaml
          git config credential.helper 'cache --timeout=120'
          git config user.email "jonathan.developer10@gmail.com"
          git config user.name "BlueChat-CircleCI"
          git add .
          git commit -m "Update via CircleCI"
          # Push quietly to prevent showing the token in log
          git push -q https://$GITHUB_PERSONAL_TOKEN@github.com/jonfarias/BlueChat-CD.git master



workflows:
  version: 2
  CI:
    jobs:
      - Test:       
          filters:
            branches:
              only: main
      - Build and Publish:
          requires:
            - Test
          filters:
            branches:
              only: main
      - GenerateYAML:
          requires:
            - Build and Publish
          filters:
            branches:
              only: main