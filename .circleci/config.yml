version: 2.1
orbs:
  python: circleci/python@1.2
  slack: circleci/slack@4.6.0

commands:
  notify_slack_error:
    steps:
      - slack/notify:
          event: fail
          template: basic_fail_1

  notify_slack_pass:
    steps:
      - slack/notify:
          event: pass
          template: basic_success_1

  notify_slack_hold:
    steps:
      - slack/notify:
          event: pass
          template: basic_on_hold_1

  notify_slack_deploy:
    steps:
      - slack/notify:
          event: pass
          template: success_tagged_deploy_1


jobs:
  Tests:
    working_directory: ~/BlueChat-CI/
    docker:
      - image: cimg/base:stable
    steps:
      - checkout:
          path: ~/BlueChat-CI
      - run: |
          echo "Init Tests"
      - persist_to_workspace:
          root: .
          paths: 
            - ./manifests

  Unit Tests: 
    working_directory: ~/BlueChat-CI/
    docker:
      - image: cimg/python:3.8
        environment:
          FLASK_CONFIG: testing
    steps:
      - checkout:
          path: ~/BlueChat-CI
      - run:
          name: Setup VirtualEnv
          command: |
            virtualenv bluechat
            . bluechat/bin/activate
            pip install --upgrade pip
            pip install --no-cache-dir -r chat/application/requirements.txt
      - run:
          name: Run Tests
          command: |
            . bluechat/bin/activate
            pytest chat/test/ -v
      - notify_slack_error
      - notify_slack_pass

  Test YAML:
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Install kubeval
          command: |
            wget https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz
            tar xf kubeval-linux-amd64.tar.gz
      - run:
          name: Test YAML - DEV
          command: |
            ./kubeval /tmp/workspace/manifests/bluechat-dev/bluechat-deploy-dev.yml
      - run:
          name: Test YAML - PROD
          command: |
            ./kubeval /tmp/workspace/manifests/bluechat-prod/bluechat-deploy-prod.yml
      - notify_slack_error
      - notify_slack_pass
  
  Development:
    docker:
      - image: cimg/base:stable
    steps:
      - run: |
          echo "Init Build and Deploy of Development Environment"

  Build and Publish-DEV:
    docker:
      - image: cimg/python:3.8
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASSWD
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
          docker_layer_caching: true
      - run: 
          name: Build
          command: |
            TAG=0.1.$CIRCLE_BUILD_NUM
            docker build -t $DOCKER_USER/bluechat-web:$TAG chat/application/.
      - run:
          name: Publish
          command: |
            TAG=0.1.$CIRCLE_BUILD_NUM
            echo $DOCKER_PASSWD | docker login -u $DOCKER_USER --password-stdin
            docker push $DOCKER_USER/bluechat-web:$TAG
            docker tag $DOCKER_USER/bluechat-web:$TAG $DOCKER_USER/bluechat-web:dev
            docker push $DOCKER_USER/bluechat-web:dev
      - notify_slack_error

  GenerateYAML-DEV:
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run : 
          name: Deploy YAML
          command: |
            TAG=0.1.$CIRCLE_PREVIOUS_BUILD_NUM
            git clone https://github.com/jonfarias/BlueChat-CD /tmp/BlueChat-CD
            cd /tmp/BlueChat-CD
            cp -r /tmp/workspace/manifests .
            sed -i 's/\(bluechat-web\)\(.*\)/\1:'$TAG'/' ./manifests/bluechat-dev/bluechat-deploy-dev.yml
            git config credential.helper 'cache --timeout=120'
            git config user.email "jonathan.developer10@gmail.com"
            git config user.name "BlueChat-CircleCI"
            git add ./manifests/bluechat-dev/bluechat-deploy-dev.yml
            git commit -m "Update via CircleCI - BUILD_NUM = $TAG"
            git branch -M main
            git push -q https://$GITHUB_PERSONAL_TOKEN@github.com/jonfarias/BlueChat-CD.git main
      - notify_slack_pass

  Production:
    docker:
      - image: cimg/base:stable
    steps:
      - run: |
          echo "Aprove this task to init Production Build and Deploy"
      - notify_slack_hold
  

  Build and Publish-PROD:
    docker:
      - image: cimg/python:3.8
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASSWD
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
          docker_layer_caching: true
      - run: |
          TAG=0.1.$CIRCLE_BUILD_NUM
          docker build -t $DOCKER_USER/bluechat-web:$TAG chat/application/.
          echo $DOCKER_PASSWD | docker login -u $DOCKER_USER --password-stdin
          docker push $DOCKER_USER/bluechat-web:$TAG
          docker tag $DOCKER_USER/bluechat-web:$TAG $DOCKER_USER/bluechat-web:latest
          docker push $DOCKER_USER/bluechat-web:latest
      - notify_slack_error

  GenerateYAML-PROD:
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run : |
          TAG=0.1.$CIRCLE_PREVIOUS_BUILD_NUM
          git clone https://github.com/jonfarias/BlueChat-CD /tmp/BlueChat-CD
          cd /tmp/BlueChat-CD
          cp -r /tmp/workspace/manifests .
          sed -i 's/\(bluechat-web\)\(.*\)/\1:'$TAG'/' ./manifests/bluechat-prod/bluechat-deploy-prod.yml
          git config credential.helper 'cache --timeout=120'
          git config user.email "jonathan.developer10@gmail.com"
          git config user.name "BlueChat-CircleCI"
          git add ./manifests/bluechat-prod/bluechat-deploy-prod.yml
          git commit -m "Update via CircleCI - BUILD_NUM = $TAG"
          git branch -M main
          git push -q https://$GITHUB_PERSONAL_TOKEN@github.com/jonfarias/BlueChat-CD.git main
          ls
      - notify_slack_deploy

workflows:
  version: 2
  CI:
    jobs:
      - Tests:       
          filters:
            branches:
              only: main

      - Unit Tests:
          requires:
            - Tests       
          filters:
            branches:
              only: main
          context:
            - Slack
      
      - Test YAML:
          requires:
            - Tests  
          filters:
            branches:
              only: main
          context:
            - Slack

      - Development:
          requires:
            - Unit Tests
            - Test YAML
          filters:
            branches:
              only: main

      - Build and Publish-DEV:
          requires:
            - Development
          filters:
            branches:
              only: main
          context:
            - Slack

      - GenerateYAML-DEV:
          requires:
            - Build and Publish-DEV
          filters:
            branches:
              only: main
          context:
            - Slack

      - Production:
          type: approval
          requires:
            - Unit Tests
            - Test YAML
          filters:
            branches:
              only: main
          context:
            - Slack

      - Build and Publish-PROD:
          requires:
            - Production
          filters:
            branches:
              only: main
          context:
            - Slack

      - GenerateYAML-PROD:
          requires:
            - Build and Publish-PROD
          filters:
            branches:
              only: main
          context:
            - Slack